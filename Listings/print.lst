


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: Zachary Chin and Alex Liang
    3 00000000         ; Last modification date: 4/15/2020
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000         
   21 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   22 00000000         ; Output a 32-bit number in unsigned decimal format
   23 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   24 00000000         ; Output: none
   25 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   26 00000000         ; Lab 7 requirement is for at least one local variable o
                       n the stack with symbolic binding
   27 00000000 00000030 
                       numToAscii
                               EQU              0x30        ;Any number plus 0x
                                                            30 = their ascii eq
                                                            uivalent
   28 00000000         ;Binding for local variable numDec
   29 00000000 00000000 
                       numDec  EQU              0           ;numDec holds the i
                                                            nput number to be u
                                                            sed to print
   30 00000000         LCD_OutDec
   31 00000000 B510            PUSH{R4,         LR}         ;Save registers
   32 00000002 B082            SUB              SP, #8      ;Allocate space on 
                                                            the stack for numDe
                                                            c (and an extra 4 b
                                                            ytes for alignment)
                                                            
   33 00000004 9000            STR              R0, [SP,#numDec] ;Store the inp
                                                            ut in numDec
   34 00000006 280A            CMP              R0, #10     ;BASE CASE if <10 t
                                                            hen branch to the b
                                                            ase case
   35 00000008 D308            BLO              baseCase
   36 0000000A F04F 040A       MOV              R4, #10     ;R4 holds the value
                                                             #10
   37 0000000E FBB0 F0F4       UDIV             R0, R4      ;Divide the num by 
                                                            10



ARM Macro Assembler    Page 2 


   38 00000012 F7FF FFFE       BL               LCD_OutDec  ;Recursive call, ca
                                                            using the numbers t
                                                            o be printed starti
                                                            ng from the MS digi
                                                            t
   39 00000016 9800            LDR              R0, [SP,#numDec] ;After the rec
                                                            ursive call finishe
                                                            s, grab the number 
                                                            again from numDec
   40 00000018 F000 F809       BL               mod10       ;Isolate the LS dig
                                                            it
   41 0000001C         baseCase
   42 0000001C F04F 0430       LDR              R4, =numToAscii ;Grab the value
                                                             to convert to asci
                                                            i
   43 00000020 4420            ADD              R0, R4      ;Add the digit to p
                                                            rint and convert it
                                                             to ascii
   44 00000022 F7FF FFFE       BL               ST7735_OutChar ;Print the digit
                                                            
   45 00000026 B002            ADD              SP, #8      ;Deallocate the loc
                                                            al variable
   46 00000028 E8BD 4010       POP{R4,LR}                   ;Restore the regist
                                                            ers
   47 0000002C 4770            BX               LR          ;Exit the subroutin
                                                            e
   48 0000002E         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   49 0000002E         
   50 0000002E         
   51 0000002E         ; -----------------------mod10----------------------
   52 0000002E         ; Divides the input by 10 and returns the remainder
   53 0000002E         ; Inputs:  R0 is an unsigned 32-bit number
   54 0000002E         ; Outputs: R0 holds the remainder
   55 0000002E         mod10
   56 0000002E B430            PUSH{R4,R5}                  ;Save registers use
                                                            d
   57 00000030 F04F 050A       MOV              R5, #10     ;R5 holds the value
                                                             #10
   58 00000034 FBB0 F4F5       UDIV             R4, R0, R5  ;Divide the input b
                                                            y 10 and store in R
                                                            4
   59 00000038 FB04 F405       MUL              R4, R5      ;Multiply the quoti
                                                            ent by 10
   60 0000003C EBA0 0004       SUB              R0, R0, R4  ;Subtract the origi
                                                            nal num by the prod
                                                            uct and store it in
                                                             R0
   61 00000040 BC30            POP{R4,R5}                   ;Restore registers
   62 00000042 4770            BX               LR          ;Return
   63 00000044         
   64 00000044         ; -----------------------LCD _OutFix--------------------
                       --
   65 00000044         ; Output characters to LCD display in fixed-point format
                       
   66 00000044         ; unsigned decimal, resolution 0.01, range 0.00 to 9.99
   67 00000044         ; Inputs:  R0 is an unsigned 32-bit number
   68 00000044         ; Outputs: none
   69 00000044         ; E.g., R0=0,    then output "0.00 "
   70 00000044         ;       R0=3,    then output "0.003 "



ARM Macro Assembler    Page 3 


   71 00000044         ;       R0=89,   then output "0.89 "
   72 00000044         ;       R0=123,  then output "1.23 "
   73 00000044         ;       R0=999,  then output "9.99 "
   74 00000044         ;       R0>999,  then output "*.** "
   75 00000044         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   76 00000044         ; Lab 7 requirement is for at least one local variable o
                       n the stack with symbolic binding
   77 00000044         
   78 00000044 000003E7 
                       maximum EQU              999         ;The maximum value 
                                                            before the input is
                                                             invalid
   79 00000044 0000002A 
                       asterisk
                               EQU              0x2A        ;The ascii code for
                                                             "*"
   80 00000044 0000002E 
                       period  EQU              0x2E        ;The ascii code for
                                                             "."
   81 00000044 00000064 
                       delta   EQU              100         ;The fixed number d
                                                            elta value
   82 00000044         ;Binding for local variables numFix and count
   83 00000044 00000000 
                       numFix  EQU              0           ;numFix holds the d
                                                            igits left to be pr
                                                            inted
   84 00000044 00000004 
                       count   EQU              4           ;count keeps track 
                                                            of the current digi
                                                            t being printed
   85 00000044         LCD_OutFix
   86 00000044 B570            PUSH{R4-R6,LR}               ;Save registers
   87 00000046 B082            SUB              SP, #8      ;Allocation for loc
                                                            al variables
   88 00000048         ;Check for out of range
   89 00000048 F240 34E7       LDR              R4, =maximum ;R4 holds 999
   90 0000004C 42A0            CMP              R0, R4      ;Compare R0 and R4
   91 0000004E D826            BHI              outOfRange  ;Branch if paramete
                                                            r > 999
   92 00000050 9000            STR              R0, [SP,#numFix] ;Store the num
                                                            ber in numFix
   93 00000052 F04F 0401       MOV              R4, #1      ;R4 holds the value
                                                             #1
   94 00000056 9401            STR              R4, [SP,#count] ;count is initi
                                                            alized to 1
   95 00000058         outFixLoop
   96 00000058 9C01            LDR              R4, [SP,#count] ;Load the value
                                                             of count
   97 0000005A 2C02            CMP              R4, #2      ;Check if count is 
                                                            2
   98 0000005C D017            BEQ              isPeriod    ;If =2, branch to p
                                                            rint a "."
   99 0000005E 9D00            LDR              R5, [SP,#numFix] ;Load the rema
                                                            ining digits to be 
                                                            printed
  100 00000060 F04F 0064       LDR              R0, =delta  ;R0 holds the value
                                                             #100



ARM Macro Assembler    Page 4 


  101 00000064 FBB5 F0F0       UDIV             R0, R5, R0  ;Isolate the hundre
                                                            dths digit to be pr
                                                            inted
  102 00000068 F04F 0630       LDR              R6, =numToAscii ;R6 holds the v
                                                            alue to convert a n
                                                            umber to ascii
  103 0000006C 4430            ADD              R0, R6      ;Convert the digit 
                                                            to ascii
  104 0000006E F7FF FFFE       BL               ST7735_OutChar ;Print the digit
                                                             in R0
  105 00000072 4628            MOV              R0, R5      ;R0 holds the previ
                                                            ous number before d
                                                            ivision
  106 00000074 F000 F826       BL               mod100      ;Isolate the tenths
                                                             and ones digits
  107 00000078 F04F 050A       MOV              R5, #10     ;R5 holds the value
                                                             #10
  108 0000007C FB00 F005       MUL              R0, R5      ;Multiply the isola
                                                            ted digits by 10 to
                                                             print out next
  109 00000080 9000            STR              R0, [SP,#numFix] ;Store the new
                                                             number in numFix
  110 00000082 F104 0401       ADD              R4, #1      ;Increment count by
                                                             1
  111 00000086 9401            STR              R4, [SP,#count] ;Store the new 
                                                            value in count
  112 00000088 2C05            CMP              R4, #5      ;Compare it to 5
  113 0000008A D017            BEQ              exit        ;If 5, the number h
                                                            as been printed, ex
                                                            it the loop
  114 0000008C E7E4            B                outFixLoop  ;Else loop back to 
                                                            outFixLoop
  115 0000008E         isPeriod                             ;Print out a decima
                                                            l point (period)
  116 0000008E F04F 002E       LDR              R0, =period ;R0 holds the ascii
                                                             value for "."
  117 00000092 F7FF FFFE       BL               ST7735_OutChar ;Print it
  118 00000096 F104 0401       ADD              R4, #1      ;Increment count
  119 0000009A 9401            STR              R4, [SP,#count] ;Store the new 
                                                            value in count
  120 0000009C E7DC            B                outFixLoop  ;Enter back into th
                                                            e loop
  121 0000009E         outOfRange                           ;If invalid, print 
                                                            "*.**"
  122 0000009E F04F 042A       LDR              R4, =asterisk ;R4 holds the asc
                                                            ii value for "*"
  123 000000A2 4620            MOV              R0, R4      ;Put "*" in R0 to p
                                                            rint
  124 000000A4 F7FF FFFE       BL               ST7735_OutChar ;Print
  125 000000A8 F04F 002E       LDR              R0, =period ;R0 holds the value
                                                             for period
  126 000000AC F7FF FFFE       BL               ST7735_OutChar ;Print
  127 000000B0 4620            MOV              R0, R4      ;R0 holds "*"
  128 000000B2 F7FF FFFE       BL               ST7735_OutChar ;Print
  129 000000B6 4620            MOV              R0, R4      ;R0 holds "*"
  130 000000B8 F7FF FFFE       BL               ST7735_OutChar ;Print
  131 000000BC         exit
  132 000000BC B002            ADD              SP, #8      ;Deallocate the loc
                                                            al variables



ARM Macro Assembler    Page 5 


  133 000000BE E8BD 4070       POP{R4-R6,LR}                ;Restore registers
  134 000000C2 4770            BX               LR          ;Return
  135 000000C4         
  136 000000C4                 ALIGN
  137 000000C4         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  138 000000C4         
  139 000000C4         ; -----------------------mod100----------------------
  140 000000C4         ; Divides the input by 100 and returns the remainder
  141 000000C4         ; Inputs:  R0 is an unsigned 32-bit number
  142 000000C4         ; Outputs: R0 holds the remainder
  143 000000C4         mod100
  144 000000C4 B430            PUSH{R4,R5}                  ;Save registers
  145 000000C6 F04F 0564       MOV              R5, #100    ;R5 holds the value
                                                             #100
  146 000000CA FBB0 F4F5       UDIV             R4, R0, R5  ;Divide the input n
                                                            um by 100 and store
                                                             in R4
  147 000000CE FB04 F405       MUL              R4, R5      ;Multiply the quoti
                                                            ent by 100
  148 000000D2 EBA0 0004       SUB              R0, R0, R4  ;Subtract the produ
                                                            ct from the input n
                                                            um and store in R0
  149 000000D6 BC30            POP{R4,R5}                   ;Restore registers
  150 000000D8 4770            BX               LR          ;Return
  151 000000DA         
  152 000000DA 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  153 000000DC                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\objects\print.d -o.\objects\print.o -I.\RTE\_LegendOfZorlda -IC:
\Users\iiale\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Us
ers\iiale\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --
predefine="__UVISION_VERSION SETA 529" --predefine="_RTE_ SETA 1" --predefine="
TM4C123GH6PM SETA 1" --list=.\listings\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 30 in file Print.s
   Uses
      At line 14 in file Print.s
      At line 38 in file Print.s

LCD_OutFix 00000044

Symbol: LCD_OutFix
   Definitions
      At line 85 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
baseCase 0000001C

Symbol: baseCase
   Definitions
      At line 41 in file Print.s
   Uses
      At line 35 in file Print.s
Comment: baseCase used once
exit 000000BC

Symbol: exit
   Definitions
      At line 131 in file Print.s
   Uses
      At line 113 in file Print.s
Comment: exit used once
isPeriod 0000008E

Symbol: isPeriod
   Definitions
      At line 115 in file Print.s
   Uses
      At line 98 in file Print.s
Comment: isPeriod used once
mod10 0000002E

Symbol: mod10
   Definitions
      At line 55 in file Print.s
   Uses
      At line 40 in file Print.s
Comment: mod10 used once
mod100 000000C4




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: mod100
   Definitions
      At line 143 in file Print.s
   Uses
      At line 106 in file Print.s
Comment: mod100 used once
outFixLoop 00000058

Symbol: outFixLoop
   Definitions
      At line 95 in file Print.s
   Uses
      At line 114 in file Print.s
      At line 120 in file Print.s

outOfRange 0000009E

Symbol: outOfRange
   Definitions
      At line 121 in file Print.s
   Uses
      At line 91 in file Print.s
Comment: outOfRange used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

asterisk 0000002A

Symbol: asterisk
   Definitions
      At line 79 in file Print.s
   Uses
      At line 122 in file Print.s
Comment: asterisk used once
count 00000004

Symbol: count
   Definitions
      At line 84 in file Print.s
   Uses
      At line 94 in file Print.s
      At line 96 in file Print.s
      At line 111 in file Print.s
      At line 119 in file Print.s

delta 00000064

Symbol: delta
   Definitions
      At line 81 in file Print.s
   Uses
      At line 100 in file Print.s
Comment: delta used once
maximum 000003E7

Symbol: maximum
   Definitions
      At line 78 in file Print.s
   Uses
      At line 89 in file Print.s
Comment: maximum used once
numDec 00000000

Symbol: numDec
   Definitions
      At line 29 in file Print.s
   Uses
      At line 33 in file Print.s
      At line 39 in file Print.s

numFix 00000000

Symbol: numFix
   Definitions
      At line 83 in file Print.s
   Uses
      At line 92 in file Print.s
      At line 99 in file Print.s
      At line 109 in file Print.s

numToAscii 00000030

Symbol: numToAscii
   Definitions
      At line 27 in file Print.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 42 in file Print.s
      At line 102 in file Print.s

period 0000002E

Symbol: period
   Definitions
      At line 80 in file Print.s
   Uses
      At line 116 in file Print.s
      At line 125 in file Print.s

8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 44 in file Print.s
      At line 104 in file Print.s
      At line 117 in file Print.s
      At line 124 in file Print.s
      At line 126 in file Print.s
      At line 128 in file Print.s
      At line 130 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
353 symbols in table
